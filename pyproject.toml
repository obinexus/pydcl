[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pydcl"
version = "1.0.0"
description = "Python Dynamic Cost Layer - Division-aware GitHub organization cost modeling toolkit"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "OBINexus Computing", email = "support@obinexuscomputing.com"},
    {name = "Nnamdi Michael Okpala", email = "nnamdi@obinexuscomputing.com"}
]
maintainers = [
    {name = "OBINexus Computing", email = "support@obinexuscomputing.com"}
]
keywords = [
    "github", "cost-modeling", "division-aware", "project-management", 
    "dynamic-cost-layer", "obinexus", "sinphase", "hierarchical-structuring"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Systems Administration"
]
requires-python = ">=3.8"
dependencies = [
    "PyGithub>=1.59.0",
    "PyYAML>=6.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "requests>=2.28.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
telemetry = [
    "prometheus-client>=0.17.0",
    "structlog>=23.0.0"
]
visualization = [
    "matplotlib>=3.7.0",
    "plotly>=5.15.0",
    "pandas>=2.0.0"
]

[project.urls]
Homepage = "https://github.com/obinexus/pydcl"
Repository = "https://github.com/obinexus/pydcl"
Documentation = "https://pydcl.readthedocs.io"
"Bug Tracker" = "https://github.com/obinexus/pydcl/issues"
Changelog = "https://github.com/obinexus/pydcl/blob/main/CHANGELOG.md"

[project.scripts]
pydcl = "pydcl.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["pydcl*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
pydcl = ["*.yaml", "*.json", "templates/*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pydcl"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["pydcl"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
